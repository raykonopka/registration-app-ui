//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RegistrationWeb.Client.RegistrationDataService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentDAO", Namespace="http://schemas.datacontract.org/2004/07/RegistrationApp.DataClient.Models")]
    [System.SerializableAttribute()]
    public partial class StudentDAO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MajorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudentNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MajorId {
            get {
                return this.MajorIdField;
            }
            set {
                if ((this.MajorIdField.Equals(value) != true)) {
                    this.MajorIdField = value;
                    this.RaisePropertyChanged("MajorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentName {
            get {
                return this.StudentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentNameField, value) != true)) {
                    this.StudentNameField = value;
                    this.RaisePropertyChanged("StudentName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentUserDAO", Namespace="http://schemas.datacontract.org/2004/07/RegistrationApp.DataClient.Models")]
    [System.SerializableAttribute()]
    public partial class StudentUserDAO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StudentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudentId {
            get {
                return this.StudentIdField;
            }
            set {
                if ((this.StudentIdField.Equals(value) != true)) {
                    this.StudentIdField = value;
                    this.RaisePropertyChanged("StudentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPassword {
            get {
                return this.UserPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPasswordField, value) != true)) {
                    this.UserPasswordField = value;
                    this.RaisePropertyChanged("UserPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegistrarUserDAO", Namespace="http://schemas.datacontract.org/2004/07/RegistrationApp.DataClient.Models")]
    [System.SerializableAttribute()]
    public partial class RegistrarUserDAO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPassword {
            get {
                return this.UserPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPasswordField, value) != true)) {
                    this.UserPasswordField = value;
                    this.RaisePropertyChanged("UserPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CourseDAO", Namespace="http://schemas.datacontract.org/2004/07/RegistrationApp.DataClient.Models")]
    [System.SerializableAttribute()]
    public partial class CourseDAO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreditsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Credits {
            get {
                return this.CreditsField;
            }
            set {
                if ((this.CreditsField.Equals(value) != true)) {
                    this.CreditsField = value;
                    this.RaisePropertyChanged("Credits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((this.DepartmentIdField.Equals(value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CourseSessionDAO", Namespace="http://schemas.datacontract.org/2004/07/RegistrationApp.DataClient.Models")]
    [System.SerializableAttribute()]
    public partial class CourseSessionDAO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CourseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DaysInSessionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfessorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CourseId {
            get {
                return this.CourseIdField;
            }
            set {
                if ((this.CourseIdField.Equals(value) != true)) {
                    this.CourseIdField = value;
                    this.RaisePropertyChanged("CourseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DaysInSession {
            get {
                return this.DaysInSessionField;
            }
            set {
                if ((object.ReferenceEquals(this.DaysInSessionField, value) != true)) {
                    this.DaysInSessionField = value;
                    this.RaisePropertyChanged("DaysInSession");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Professor {
            get {
                return this.ProfessorField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessorField, value) != true)) {
                    this.ProfessorField = value;
                    this.RaisePropertyChanged("Professor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookmarkedSessionDAO", Namespace="http://schemas.datacontract.org/2004/07/RegistrationApp.DataClient.Models")]
    [System.SerializableAttribute()]
    public partial class BookmarkedSessionDAO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StudentUserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((this.SessionIdField.Equals(value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudentUserId {
            get {
                return this.StudentUserIdField;
            }
            set {
                if ((this.StudentUserIdField.Equals(value) != true)) {
                    this.StudentUserIdField = value;
                    this.RaisePropertyChanged("StudentUserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleDAO", Namespace="http://schemas.datacontract.org/2004/07/RegistrationApp.DataClient.Models")]
    [System.SerializableAttribute()]
    public partial class ScheduleDAO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CourseSessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StudentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CourseSessionId {
            get {
                return this.CourseSessionIdField;
            }
            set {
                if ((this.CourseSessionIdField.Equals(value) != true)) {
                    this.CourseSessionIdField = value;
                    this.RaisePropertyChanged("CourseSessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudentId {
            get {
                return this.StudentIdField;
            }
            set {
                if ((this.StudentIdField.Equals(value) != true)) {
                    this.StudentIdField = value;
                    this.RaisePropertyChanged("StudentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RegistrationDataService.IRegistrationDataService")]
    public interface IRegistrationDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/GetStudents", ReplyAction="http://tempuri.org/IRegistrationDataService/GetStudentsResponse")]
        RegistrationWeb.Client.RegistrationDataService.StudentDAO[] GetStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/GetStudents", ReplyAction="http://tempuri.org/IRegistrationDataService/GetStudentsResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.StudentDAO[]> GetStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/GetStudentsUsers", ReplyAction="http://tempuri.org/IRegistrationDataService/GetStudentsUsersResponse")]
        RegistrationWeb.Client.RegistrationDataService.StudentUserDAO[] GetStudentsUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/GetStudentsUsers", ReplyAction="http://tempuri.org/IRegistrationDataService/GetStudentsUsersResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.StudentUserDAO[]> GetStudentsUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/GetRegistrarUsers", ReplyAction="http://tempuri.org/IRegistrationDataService/GetRegistrarUsersResponse")]
        RegistrationWeb.Client.RegistrationDataService.RegistrarUserDAO[] GetRegistrarUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/GetRegistrarUsers", ReplyAction="http://tempuri.org/IRegistrationDataService/GetRegistrarUsersResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.RegistrarUserDAO[]> GetRegistrarUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/GetCourses", ReplyAction="http://tempuri.org/IRegistrationDataService/GetCoursesResponse")]
        RegistrationWeb.Client.RegistrationDataService.CourseDAO[] GetCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/GetCourses", ReplyAction="http://tempuri.org/IRegistrationDataService/GetCoursesResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.CourseDAO[]> GetCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/GetSessions", ReplyAction="http://tempuri.org/IRegistrationDataService/GetSessionsResponse")]
        RegistrationWeb.Client.RegistrationDataService.CourseSessionDAO[] GetSessions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/GetSessions", ReplyAction="http://tempuri.org/IRegistrationDataService/GetSessionsResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.CourseSessionDAO[]> GetSessionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/RegisterStudent", ReplyAction="http://tempuri.org/IRegistrationDataService/RegisterStudentResponse")]
        bool RegisterStudent(int studentId, int sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/RegisterStudent", ReplyAction="http://tempuri.org/IRegistrationDataService/RegisterStudentResponse")]
        System.Threading.Tasks.Task<bool> RegisterStudentAsync(int studentId, int sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/DropFromSession", ReplyAction="http://tempuri.org/IRegistrationDataService/DropFromSessionResponse")]
        bool DropFromSession(int studentId, int sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/DropFromSession", ReplyAction="http://tempuri.org/IRegistrationDataService/DropFromSessionResponse")]
        System.Threading.Tasks.Task<bool> DropFromSessionAsync(int studentId, int sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/AddCourseBookmark", ReplyAction="http://tempuri.org/IRegistrationDataService/AddCourseBookmarkResponse")]
        bool AddCourseBookmark(RegistrationWeb.Client.RegistrationDataService.BookmarkedSessionDAO bookmarkToAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/AddCourseBookmark", ReplyAction="http://tempuri.org/IRegistrationDataService/AddCourseBookmarkResponse")]
        System.Threading.Tasks.Task<bool> AddCourseBookmarkAsync(RegistrationWeb.Client.RegistrationDataService.BookmarkedSessionDAO bookmarkToAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/RemoveCourseBookmark", ReplyAction="http://tempuri.org/IRegistrationDataService/RemoveCourseBookmarkResponse")]
        bool RemoveCourseBookmark(RegistrationWeb.Client.RegistrationDataService.BookmarkedSessionDAO bookmarkToRemove);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/RemoveCourseBookmark", ReplyAction="http://tempuri.org/IRegistrationDataService/RemoveCourseBookmarkResponse")]
        System.Threading.Tasks.Task<bool> RemoveCourseBookmarkAsync(RegistrationWeb.Client.RegistrationDataService.BookmarkedSessionDAO bookmarkToRemove);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/GetBookmarks", ReplyAction="http://tempuri.org/IRegistrationDataService/GetBookmarksResponse")]
        RegistrationWeb.Client.RegistrationDataService.BookmarkedSessionDAO[] GetBookmarks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/GetBookmarks", ReplyAction="http://tempuri.org/IRegistrationDataService/GetBookmarksResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.BookmarkedSessionDAO[]> GetBookmarksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/GetSchedules", ReplyAction="http://tempuri.org/IRegistrationDataService/GetSchedulesResponse")]
        RegistrationWeb.Client.RegistrationDataService.ScheduleDAO[] GetSchedules();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/GetSchedules", ReplyAction="http://tempuri.org/IRegistrationDataService/GetSchedulesResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.ScheduleDAO[]> GetSchedulesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/InsertCourse", ReplyAction="http://tempuri.org/IRegistrationDataService/InsertCourseResponse")]
        bool InsertCourse(RegistrationWeb.Client.RegistrationDataService.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/InsertCourse", ReplyAction="http://tempuri.org/IRegistrationDataService/InsertCourseResponse")]
        System.Threading.Tasks.Task<bool> InsertCourseAsync(RegistrationWeb.Client.RegistrationDataService.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/CancelCourse", ReplyAction="http://tempuri.org/IRegistrationDataService/CancelCourseResponse")]
        bool CancelCourse(RegistrationWeb.Client.RegistrationDataService.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/CancelCourse", ReplyAction="http://tempuri.org/IRegistrationDataService/CancelCourseResponse")]
        System.Threading.Tasks.Task<bool> CancelCourseAsync(RegistrationWeb.Client.RegistrationDataService.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/InsertStudent", ReplyAction="http://tempuri.org/IRegistrationDataService/InsertStudentResponse")]
        bool InsertStudent(RegistrationWeb.Client.RegistrationDataService.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/InsertStudent", ReplyAction="http://tempuri.org/IRegistrationDataService/InsertStudentResponse")]
        System.Threading.Tasks.Task<bool> InsertStudentAsync(RegistrationWeb.Client.RegistrationDataService.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/RemoveStudent", ReplyAction="http://tempuri.org/IRegistrationDataService/RemoveStudentResponse")]
        bool RemoveStudent(RegistrationWeb.Client.RegistrationDataService.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/RemoveStudent", ReplyAction="http://tempuri.org/IRegistrationDataService/RemoveStudentResponse")]
        System.Threading.Tasks.Task<bool> RemoveStudentAsync(RegistrationWeb.Client.RegistrationDataService.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/GetStudentSchedule", ReplyAction="http://tempuri.org/IRegistrationDataService/GetStudentScheduleResponse")]
        RegistrationWeb.Client.RegistrationDataService.CourseSessionDAO[] GetStudentSchedule(int studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/GetStudentSchedule", ReplyAction="http://tempuri.org/IRegistrationDataService/GetStudentScheduleResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.CourseSessionDAO[]> GetStudentScheduleAsync(int studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/ListEnrolledStudents", ReplyAction="http://tempuri.org/IRegistrationDataService/ListEnrolledStudentsResponse")]
        RegistrationWeb.Client.RegistrationDataService.StudentDAO[] ListEnrolledStudents(int sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationDataService/ListEnrolledStudents", ReplyAction="http://tempuri.org/IRegistrationDataService/ListEnrolledStudentsResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.StudentDAO[]> ListEnrolledStudentsAsync(int sessionId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRegistrationDataServiceChannel : RegistrationWeb.Client.RegistrationDataService.IRegistrationDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegistrationDataServiceClient : System.ServiceModel.ClientBase<RegistrationWeb.Client.RegistrationDataService.IRegistrationDataService>, RegistrationWeb.Client.RegistrationDataService.IRegistrationDataService {
        
        public RegistrationDataServiceClient() {
        }
        
        public RegistrationDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RegistrationDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegistrationDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegistrationDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RegistrationWeb.Client.RegistrationDataService.StudentDAO[] GetStudents() {
            return base.Channel.GetStudents();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.StudentDAO[]> GetStudentsAsync() {
            return base.Channel.GetStudentsAsync();
        }
        
        public RegistrationWeb.Client.RegistrationDataService.StudentUserDAO[] GetStudentsUsers() {
            return base.Channel.GetStudentsUsers();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.StudentUserDAO[]> GetStudentsUsersAsync() {
            return base.Channel.GetStudentsUsersAsync();
        }
        
        public RegistrationWeb.Client.RegistrationDataService.RegistrarUserDAO[] GetRegistrarUsers() {
            return base.Channel.GetRegistrarUsers();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.RegistrarUserDAO[]> GetRegistrarUsersAsync() {
            return base.Channel.GetRegistrarUsersAsync();
        }
        
        public RegistrationWeb.Client.RegistrationDataService.CourseDAO[] GetCourses() {
            return base.Channel.GetCourses();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.CourseDAO[]> GetCoursesAsync() {
            return base.Channel.GetCoursesAsync();
        }
        
        public RegistrationWeb.Client.RegistrationDataService.CourseSessionDAO[] GetSessions() {
            return base.Channel.GetSessions();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.CourseSessionDAO[]> GetSessionsAsync() {
            return base.Channel.GetSessionsAsync();
        }
        
        public bool RegisterStudent(int studentId, int sessionId) {
            return base.Channel.RegisterStudent(studentId, sessionId);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterStudentAsync(int studentId, int sessionId) {
            return base.Channel.RegisterStudentAsync(studentId, sessionId);
        }
        
        public bool DropFromSession(int studentId, int sessionId) {
            return base.Channel.DropFromSession(studentId, sessionId);
        }
        
        public System.Threading.Tasks.Task<bool> DropFromSessionAsync(int studentId, int sessionId) {
            return base.Channel.DropFromSessionAsync(studentId, sessionId);
        }
        
        public bool AddCourseBookmark(RegistrationWeb.Client.RegistrationDataService.BookmarkedSessionDAO bookmarkToAdd) {
            return base.Channel.AddCourseBookmark(bookmarkToAdd);
        }
        
        public System.Threading.Tasks.Task<bool> AddCourseBookmarkAsync(RegistrationWeb.Client.RegistrationDataService.BookmarkedSessionDAO bookmarkToAdd) {
            return base.Channel.AddCourseBookmarkAsync(bookmarkToAdd);
        }
        
        public bool RemoveCourseBookmark(RegistrationWeb.Client.RegistrationDataService.BookmarkedSessionDAO bookmarkToRemove) {
            return base.Channel.RemoveCourseBookmark(bookmarkToRemove);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveCourseBookmarkAsync(RegistrationWeb.Client.RegistrationDataService.BookmarkedSessionDAO bookmarkToRemove) {
            return base.Channel.RemoveCourseBookmarkAsync(bookmarkToRemove);
        }
        
        public RegistrationWeb.Client.RegistrationDataService.BookmarkedSessionDAO[] GetBookmarks() {
            return base.Channel.GetBookmarks();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.BookmarkedSessionDAO[]> GetBookmarksAsync() {
            return base.Channel.GetBookmarksAsync();
        }
        
        public RegistrationWeb.Client.RegistrationDataService.ScheduleDAO[] GetSchedules() {
            return base.Channel.GetSchedules();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.ScheduleDAO[]> GetSchedulesAsync() {
            return base.Channel.GetSchedulesAsync();
        }
        
        public bool InsertCourse(RegistrationWeb.Client.RegistrationDataService.CourseDAO course) {
            return base.Channel.InsertCourse(course);
        }
        
        public System.Threading.Tasks.Task<bool> InsertCourseAsync(RegistrationWeb.Client.RegistrationDataService.CourseDAO course) {
            return base.Channel.InsertCourseAsync(course);
        }
        
        public bool CancelCourse(RegistrationWeb.Client.RegistrationDataService.CourseDAO course) {
            return base.Channel.CancelCourse(course);
        }
        
        public System.Threading.Tasks.Task<bool> CancelCourseAsync(RegistrationWeb.Client.RegistrationDataService.CourseDAO course) {
            return base.Channel.CancelCourseAsync(course);
        }
        
        public bool InsertStudent(RegistrationWeb.Client.RegistrationDataService.StudentDAO student) {
            return base.Channel.InsertStudent(student);
        }
        
        public System.Threading.Tasks.Task<bool> InsertStudentAsync(RegistrationWeb.Client.RegistrationDataService.StudentDAO student) {
            return base.Channel.InsertStudentAsync(student);
        }
        
        public bool RemoveStudent(RegistrationWeb.Client.RegistrationDataService.StudentDAO student) {
            return base.Channel.RemoveStudent(student);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveStudentAsync(RegistrationWeb.Client.RegistrationDataService.StudentDAO student) {
            return base.Channel.RemoveStudentAsync(student);
        }
        
        public RegistrationWeb.Client.RegistrationDataService.CourseSessionDAO[] GetStudentSchedule(int studentId) {
            return base.Channel.GetStudentSchedule(studentId);
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.CourseSessionDAO[]> GetStudentScheduleAsync(int studentId) {
            return base.Channel.GetStudentScheduleAsync(studentId);
        }
        
        public RegistrationWeb.Client.RegistrationDataService.StudentDAO[] ListEnrolledStudents(int sessionId) {
            return base.Channel.ListEnrolledStudents(sessionId);
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Client.RegistrationDataService.StudentDAO[]> ListEnrolledStudentsAsync(int sessionId) {
            return base.Channel.ListEnrolledStudentsAsync(sessionId);
        }
    }
}
